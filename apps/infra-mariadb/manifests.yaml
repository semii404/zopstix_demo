---
# Source: mariadb-galera/templates/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: mariadb-bootstrap-mariadb-galera
  namespace: "database"
  labels:
    app.kubernetes.io/instance: mariadb-bootstrap
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    app.kubernetes.io/version: 11.4.3
    helm.sh/chart: mariadb-galera-14.0.10
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: mariadb-bootstrap
      app.kubernetes.io/name: mariadb-galera
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 3306
        - port: 4567
        - port: 4568
        - port: 4444
---
# Source: mariadb-galera/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: mariadb-bootstrap-mariadb-galera
  namespace: "database"
  labels:
    app.kubernetes.io/instance: mariadb-bootstrap
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    app.kubernetes.io/version: 11.4.3
    helm.sh/chart: mariadb-galera-14.0.10
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: mariadb-bootstrap
      app.kubernetes.io/name: mariadb-galera
---
# Source: mariadb-galera/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mariadb-galera-manager
  namespace: "database"
  labels:
    app.kubernetes.io/instance: mariadb-bootstrap
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    app.kubernetes.io/version: 11.4.3
    helm.sh/chart: mariadb-galera-14.0.10
automountServiceAccountToken: false
---
# Source: mariadb-galera/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mariadb-bootstrap-mariadb-galera
  namespace: "database"
  labels:
    app.kubernetes.io/instance: mariadb-bootstrap
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    app.kubernetes.io/version: 11.4.3
    helm.sh/chart: mariadb-galera-14.0.10
type: Opaque
data:
  mariadb-root-password: "cm9vdA=="
  mariadb-password: "SHVWcWpwUVVibw=="
  mariadb-galera-mariabackup-password: "bWFyaWFiYWNrdXA="
---
# Source: mariadb-galera/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mariadb-bootstrap-mariadb-galera-configuration
  namespace: "database"
  labels:
    app.kubernetes.io/instance: mariadb-bootstrap
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    app.kubernetes.io/version: 11.4.3
    helm.sh/chart: mariadb-galera-14.0.10
data:
  my.cnf: |
    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    plugin_dir=/opt/bitnami/mariadb/plugin
    
    [mysqld]
    explicit_defaults_for_timestamp
    default_storage_engine=InnoDB
    basedir=/opt/bitnami/mariadb
    datadir=/bitnami/mariadb/data
    plugin_dir=/opt/bitnami/mariadb/plugin
    tmpdir=/opt/bitnami/mariadb/tmp
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid_file=/opt/bitnami/mariadb/tmp/mysqld.pid
    bind_address=0.0.0.0
    
    ## Character set
    ##
    collation_server=utf8_unicode_ci
    init_connect='SET NAMES utf8'
    character_set_server=utf8
    
    ## MyISAM
    ##
    key_buffer_size=32M
    myisam_recover_options=FORCE,BACKUP
    
    ## Safety
    ##
    skip_host_cache
    skip_name_resolve
    max_allowed_packet=16M
    max_connect_errors=1000000
    sql_mode=STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_AUTO_VALUE_ON_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ONLY_FULL_GROUP_BY
    sysdate_is_now=1
    
    ## Binary Logging
    ##
    log_bin=mysql-bin
    expire_logs_days=14
    # Disabling for performance per http://severalnines.com/blog/9-tips-going-production-galera-cluster-mysql
    sync_binlog=0
    # Required for Galera
    binlog_format=row
    
    ## Caches and Limits
    ##
    tmp_table_size=32M
    max_heap_table_size=32M
    # Re-enabling as now works with Maria 10.1.2
    query_cache_type=1
    query_cache_limit=4M
    query_cache_size=256M
    max_connections=500
    thread_cache_size=50
    open_files_limit=65535
    table_definition_cache=4096
    table_open_cache=4096
    
    ## InnoDB
    ##
    innodb=FORCE
    innodb_strict_mode=1
    # Mandatory per https://github.com/codership/documentation/issues/25
    innodb_autoinc_lock_mode=2
    # Per https://www.percona.com/blog/2006/08/04/innodb-double-write/
    innodb_doublewrite=1
    innodb_flush_method=O_DIRECT
    innodb_log_files_in_group=2
    innodb_log_file_size=128M
    innodb_flush_log_at_trx_commit=1
    innodb_file_per_table=1
    # 80% Memory is default reco.
    # Need to re-evaluate when DB size grows
    innodb_buffer_pool_size=2G
    innodb_file_format=Barracuda
    
    ## Logging
    ##
    log_error=/opt/bitnami/mariadb/logs/mysqld.log
    slow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log
    log_queries_not_using_indexes=1
    slow_query_log=1
    
    ## SSL
    ## Use extraVolumes and extraVolumeMounts to mount /certs filesystem
    # ssl_ca=/certs/ca.pem
    # ssl_cert=/certs/server-cert.pem
    # ssl_key=/certs/server-key.pem
    
    [galera]
    wsrep_on=ON
    wsrep_provider=/opt/bitnami/mariadb/lib/libgalera_smm.so
    wsrep_sst_method=mariabackup
    wsrep_slave_threads=4
    wsrep_cluster_address=gcomm://
    wsrep_cluster_name=galera
    wsrep_sst_auth="root:"
    # Enabled for performance per https://mariadb.com/kb/en/innodb-system-variables/#innodb_flush_log_at_trx_commit
    innodb_flush_log_at_trx_commit=2
    # MYISAM REPLICATION SUPPORT #
    wsrep_mode=REPLICATE_MYISAM
    
    [mariadb]
    plugin_load_add=auth_pam
    
    ## Data-at-Rest Encryption
    ## Use extraVolumes and extraVolumeMounts to mount /encryption filesystem
    # plugin_load_add=file_key_management
    # file_key_management_filename=/encryption/keyfile.enc
    # file_key_management_filekey=FILE:/encryption/keyfile.key
    # file_key_management_encryption_algorithm=AES_CTR
    # encrypt_binlog=ON
    # encrypt_tmp_files=ON
    
    ## InnoDB/XtraDB Encryption
    # innodb_encrypt_tables=ON
    # innodb_encrypt_temporary_tables=ON
    # innodb_encrypt_log=ON
    # innodb_encryption_threads=4
    # innodb_encryption_rotate_key_age=1
    
    ## Aria Encryption
    # aria_encrypt_tables=ON
    # encrypt_tmp_disk_tables=ON
---
# Source: mariadb-galera/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: mariadb-bootstrap-mariadb-galera
  namespace: "database"
  labels:
    app.kubernetes.io/instance: mariadb-bootstrap
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    app.kubernetes.io/version: 11.4.3
    helm.sh/chart: mariadb-galera-14.0.10
rules:
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
---
# Source: mariadb-galera/templates/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: mariadb-bootstrap-mariadb-galera
  namespace: "database"
  labels:
    app.kubernetes.io/instance: mariadb-bootstrap
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    app.kubernetes.io/version: 11.4.3
    helm.sh/chart: mariadb-galera-14.0.10
subjects:
  - kind: ServiceAccount
    name: mariadb-galera-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: mariadb-bootstrap-mariadb-galera
---
# Source: mariadb-galera/templates/headless-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mariadb-bootstrap-mariadb-galera-headless
  namespace: "database"
  labels:
    app.kubernetes.io/instance: mariadb-bootstrap
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    app.kubernetes.io/version: 11.4.3
    helm.sh/chart: mariadb-galera-14.0.10
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: galera
      port: 4567
      targetPort: galera
      appProtocol: mysql
    - name: ist
      port: 4568
      targetPort: ist
      appProtocol: mysql
    - name: sst
      port: 4444
      targetPort: sst
      appProtocol: mysql
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/instance: mariadb-bootstrap
    app.kubernetes.io/name: mariadb-galera
---
# Source: mariadb-galera/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mariadb-bootstrap-mariadb-galera
  namespace: "database"
  labels:
    app.kubernetes.io/instance: mariadb-bootstrap
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    app.kubernetes.io/version: 11.4.3
    helm.sh/chart: mariadb-galera-14.0.10
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: mysql
      port: 3306
      targetPort: mysql
      appProtocol: mysql
      nodePort: null
  selector:
    app.kubernetes.io/instance: mariadb-bootstrap
    app.kubernetes.io/name: mariadb-galera
---
# Source: mariadb-galera/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mariadb-bootstrap-mariadb-galera
  namespace: "database"
  labels:
    app.kubernetes.io/instance: mariadb-bootstrap
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    app.kubernetes.io/version: 11.4.3
    helm.sh/chart: mariadb-galera-14.0.10
spec:
  podManagementPolicy: OrderedReady
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: mariadb-bootstrap
      app.kubernetes.io/name: mariadb-galera
  serviceName: mariadb-bootstrap-mariadb-galera-headless
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: dfe62ab2e7715a24c8ba977524284c744abb547d9b45f1f0d2124e12ef1b3b77
      labels:
        app.kubernetes.io/instance: mariadb-bootstrap
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mariadb-galera
        app.kubernetes.io/version: 11.4.3
        helm.sh/chart: mariadb-galera-14.0.10
    spec:
      
      automountServiceAccountToken: false
      serviceAccountName: mariadb-galera-manager
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: mariadb-bootstrap
                    app.kubernetes.io/name: mariadb-galera
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        runAsUser: 1001
        supplementalGroups: []
        sysctls: []
      initContainers:
        - name: preserve-logs-symlinks
          image: docker.io/bitnami/mariadb-galera:11.4.3-debian-12-r2
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          resources:
            limits:
              cpu: 375m
              ephemeral-storage: 2Gi
              memory: 384Mi
            requests:
              cpu: 250m
              ephemeral-storage: 50Mi
              memory: 256Mi
          command:
            - /bin/bash
          args:
            - -ec
            - |
              #!/bin/bash

              . /opt/bitnami/scripts/libfs.sh
              # We copy the logs folder because it has symlinks to stdout and stderr
              if ! is_dir_empty /opt/bitnami/mariadb/logs; then
                cp -r /opt/bitnami/mariadb/logs /emptydir/app-logs-dir
              fi
          volumeMounts:
            - name: empty-dir
              mountPath: /emptydir
      containers:
        - name: "mariadb-galera"
          image: docker.io/bitnami/mariadb-galera:11.4.3-debian-12-r2
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          command:
            - bash
            - -ec
            - |
                # Bootstrap from the indicated node
                NODE_ID="${MY_POD_NAME#"mariadb-bootstrap-mariadb-galera-"}"
                if [[ "$NODE_ID" -eq "0" ]]; then
                    export MARIADB_GALERA_CLUSTER_BOOTSTRAP=yes
                    export MARIADB_GALERA_FORCE_SAFETOBOOTSTRAP=yes
                else
                    export MARIADB_GALERA_CLUSTER_BOOTSTRAP=no
                fi
                exec /opt/bitnami/scripts/mariadb-galera/entrypoint.sh /opt/bitnami/scripts/mariadb-galera/run.sh
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MARIADB_DEFAULT_PORT_NUMBER
              value: "3306"
            - name: MARIADB_GALERA_CLUSTER_NAME
              value: "galera"
            - name: MARIADB_GALERA_CLUSTER_ADDRESS
              value: "gcomm://mariadb-bootstrap-mariadb-galera-0.mariadb-bootstrap-mariadb-galera-headless.database.svc.cluster.local,mariadb-bootstrap-mariadb-galera-1.mariadb-bootstrap-mariadb-galera-headless.database.svc.cluster.local,mariadb-bootstrap-mariadb-galera-2.mariadb-bootstrap-mariadb-galera-headless.database.svc.cluster.local"
            - name: MARIADB_ROOT_USER
              value: "root"
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb-bootstrap-mariadb-galera
                  key: mariadb-root-password
            - name: MARIADB_DATABASE
              value: "my_database"
            - name: MARIADB_GALERA_MARIABACKUP_USER
              value: "mariabackup"
            - name: MARIADB_GALERA_MARIABACKUP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb-bootstrap-mariadb-galera
                  key: mariadb-galera-mariabackup-password
            - name: MARIADB_ENABLE_LDAP
              value: "no"
            - name: MARIADB_ENABLE_TLS
              value: "no"
          ports:
            - name: mysql
              containerPort: 3306
            - name: galera
              containerPort: 4567
            - name: ist
              containerPort: 4568
            - name: sst
              containerPort: 4444
          livenessProbe:
            exec:
              command:
                - bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  exec mysql -u"${MARIADB_ROOT_USER}" -p"${password_aux}" -e "select * from mysql.wsrep_cluster_members;"
            initialDelaySeconds: 240
            periodSeconds: 20
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  exec mysqladmin status -u"${MARIADB_ROOT_USER}" -p"${password_aux}"
            initialDelaySeconds: 180
            periodSeconds: 20
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits:
              cpu: 375m
              ephemeral-storage: 2Gi
              memory: 384Mi
            requests:
              cpu: 250m
              ephemeral-storage: 50Mi
              memory: 256Mi
          volumeMounts:
            - name: previous-boot
              mountPath: /opt/bitnami/mariadb/.bootstrap
            - name: data
              mountPath: /bitnami/mariadb
            - name: mariadb-galera-config
              mountPath: /bitnami/conf/my.cnf
              subPath: my.cnf
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/mariadb/conf
              subPath: app-conf-dir
            - name: empty-dir
              mountPath: /opt/bitnami/mariadb/tmp
              subPath: app-tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/mariadb/logs
              subPath: app-logs-dir
      volumes:
        - name: previous-boot
          emptyDir: {}
        - name: mariadb-galera-config
          configMap:
            name: mariadb-bootstrap-mariadb-galera-configuration
        - name: empty-dir
          emptyDir: {}
        - name: data
          persistentVolumeClaim:
            claimName: mariadb-pvc
